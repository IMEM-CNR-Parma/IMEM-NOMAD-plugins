{
	// Place your nomad-fairdi workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"react-component-memo-styled": {
        "scope": "javascript",
        "prefix": "rcms",
        "body": [
            "const use$1Styles = makeStyles(theme => ({",
            "  root: {}",
            "}))",
            "",
            "const $1 = React.memo(function $1({children}) {",
            "  const classes = use$1Styles()",
            "  return <div className={classes.root}>{children}</div>",
            "})",
            "$1.propTypes = {",
            "  children: PropTypes.oneOfType([",
            "    PropTypes.arrayOf(PropTypes.node),",
            "    PropTypes.node",
            "  ])",
            "}"
        ]
    }
}